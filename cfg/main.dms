container NetworkModel_World 
{ 
	container MakeUnlinkedData
	{
		
		parameter<string> Create_LandCells           := 'Ready', ExplicitSuppliers = "/SourceData/population/store_LandCells";
		parameter<string> Create_SettlementCentroids := 'Ready', ExplicitSuppliers = "/SourceData/Settlements/CalcCentroids/Generate";
		parameter<string> Create_Countries           := 'Ready', ExplicitSuppliers = "/SourceData/RegionalUnits/store_Countries";
		parameter<string> Create_OSM_Continents_fss  := 'Ready', ExplicitSuppliers = "/SourceData/Infrastructure/OSM/Per_OSM_Continent/Generate_all";
		
		// parameter<string> Create_InitialLinkSet := 'Ready', ExplicitSuppliers = "/NetworkSetup/Base_Analysis/NetwerkSpec/CreateInitialWorkingNetwork/LinkSet_Write";
		// parameter<string> Create_FinalNodeSet   := 'Ready', ExplicitSuppliers = "/NetworkSetup/Base_Analysis/NetwerkSpec/CreateMoreEfficientNetwork/FinalNodeSet_Write";
		// parameter<string> Create_FinalLinkSet   := 'Ready', ExplicitSuppliers = "/NetworkSetup/Base_Analysis/NetwerkSpec/CreateMoreEfficientNetwork/FinalLinkSet_Write";
		
		container Create_InitialLinkSet_perContinent :=
			for_each_nedv(
				SourceData/RegionalUnits/Continents/name
				, 'NetworkSetup/Per_Continent/'+SourceData/RegionalUnits/Continents/name+'/Store_Network1'
				, void
				, bool
			);
		container Create_OptimisedLinkNodeSet_perContinent :=
			for_each_nedv(
				SourceData/RegionalUnits/Continents/name
				, 'NetworkSetup/Per_Continent/'+SourceData/RegionalUnits/Continents/name+'/Store_Network2'
				, void
				, bool
			);
			
		container Create_Hierarchies_perContinent :=
			for_each_nedv(
				SourceData/RegionalUnits/Continents/name
				, '/Analyses/Obtain_Settlement_Hierarchies/'+SourceData/RegionalUnits/Continents/name+'/Store_Hierarchies'
				, void
				, bool
			);
	}	
	
	
	#include<ModelParameters.dms>
	#include<units.dms>
	#include<geometries.dms>
	#include<Classifications.dms>
	#include<SourceData.dms>
	#include<NetworkSetup.dms>
	#include<Analyses.dms>
	#include<Templates.dms>
	
	container ConfigSettings
	{
		container Overridable
		{
			parameter<String> NetworkModelWorld_DataDir        := '%SourceDataDir%/NetworkModel_World';
		}
	}
	
	container ExportSettings
	{
		container MetaInfo
		{
			parameter<string> FileName : ='%storageBaseName%.xml';
			parameter<string> FileType : ='xml'; // default is 'ini' but ini files cannot be used well to store multi-line properties such as error messages of inproperly configured properties
			container Contents
			{
				container Software
				{
					parameter<string> GeoDmsVersion: [ '=string(GeoDmsVersion())' ];
				}
				container Config
				{
					parameter<string> FullName := '=PropValue(this, '+Quote('FullName')+')';
					parameter<string> Expr     := '=PropValue(this, '+Quote('Expr'    )+')';
				}
				container Environment
				{
					parameter<string> Processor    := expand(., '%env:PROCESSOR_IDENTIFIER%');
					parameter<string> User         := expand(., '%env:USERNAME%');
					parameter<string> ComputerName := expand(., '%env:COMPUTERNAME%');
				}
				container Parameters
				{
					parameter<string>   OrgGridsize                    := ModelParameters/OrgGridsize;
					parameter<string>   DestGridsize                   := ModelParameters/DestGridsize;
					parameter<string>   MaxTravelTime                  := string(ModelParameters/MaxTravelTime);
					parameter<string>   NumberOfItersForNetworkCleanUp := string(ModelParameters/NumberOfItersForNetworkCleanUp);
					parameter<string>   MaxCarSpeed                    := string(ModelParameters/Advanced/MaxCarSpeed);
					parameter<string>   MaxCarSpeed_limit              := string(ModelParameters/Advanced/MaxCarSpeed_limit);
					parameter<string>   CarDefaultSpeed                := string(ModelParameters/Advanced/CarDefaultSpeed);
					parameter<string>   CarDefaultSpeed_low            := string(ModelParameters/Advanced/CarDefaultSpeed_low);
					parameter<string>   ConnectorLinkSpeed             := string(ModelParameters/Advanced/ConnectorLinkSpeed);
					parameter<string>   Ferry_Speed                    := string(ModelParameters/Advanced/Ferry_Speed);
				}
			}
		}
	}
}
