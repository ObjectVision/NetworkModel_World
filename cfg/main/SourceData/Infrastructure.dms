container Infrastructure : using = "geometries;units"
{  
	container OSM
	{	
		parameter<string> file_date := '20231109';
		parameter<string> dir       := '%NetworkModelWorld_DataDir%/Infrastructure/OSM/'+file_date;
		parameter<string> date      := 'latest';
		unit<uint32>      Regios    := ModelParameters/Advanced/OSM_Regios;
	
		container Per_Continent :=
			for_each_ne(
				Regios/name
				, 'Per_Continent_T('+quote(Regios/label)+')'
			);
		
		Template Per_Continent_T
		{
			parameter<string> Regio;
			///
			
			parameter<string> Generate_Lines_FSS := 'Lines', ExplicitSuppliers = "Make_lines_fss";
			
			container Read_Roads_pbf
			:	StorageName     = "= dir + '/'+Regio+'-'+date+'.osm.pbf'" 
			,	StorageType     = "gdal.vect"
			,	StorageReadOnly = "True"
			, 	SyncMode        = "AllTables"
			, 	DialogData      = "wgs84";
			
			unit<uint32> Make_lines_fss := select_with_attr_by_cond(Read_Roads_pbf/lines, IsDefined(Read_Roads_pbf/lines/geometry))
			,   StorageName = "='%LocalDataProjDir%/RegionFiles/'+Regio+'/Prep/'+file_date+'_Lines.fss'";
			
			unit<uint32> Read_lines_fss 
			:   StorageName = "='%LocalDataProjDir%/RegionFiles/'+Regio+'/Prep/'+file_date+'_Lines.fss'"
			,	StorageReadOnly = "True"
			{
				attribute<wgs84>                        geometry (arc);
				attribute<string>                       highway;
				attribute<string>                       other_tags;
				attribute<int32>                        z_order;
				attribute<classifications/OSM/roadtype> roadtype_rel   := rlookup(highway, classifications/OSM/roadtype/name);
				
				
				attribute<bool>                       IsOneDirection    := strcount(other_tags, '"oneway"=>"yes"') > 0;
				
				unit<uint8> MaxSpeeds : nrofrows = 15
				{
					attribute<string> name  := 's'+speed;
					attribute<string> speed : ['10','20','30','40','50','60','70','80','90','100','110','120','130','140','150'];
					attribute<string> expr  := '"maxspeed"=>"'+speed+'"';
					attribute<string> label := name;
				}
				
				container ExtractMaxSpeeds :=
					for_each_nedv(
						MaxSpeeds/name
						, 'strcount(other_tags, '+quote(MaxSpeeds/expr)+')'
						, .
						, uint32
					);
				attribute<MaxSpeeds>                       KPH_from_source_rel    := ='argmax_ifdefined_uint8('+AsItemList('ExtractMaxSpeeds/'+MaxSpeeds/name+' > 0 ? ExtractMaxSpeeds/'+MaxSpeeds/name+' : null_u')+')';
				attribute<km_hr>                           KPH_from_source        := value(MaxSpeeds/speed, km_hr)[KPH_from_source_rel];
			}
			
			unit<uint32> Roads := select_with_attr_by_cond(Read_lines_fss, IsDefined(Read_lines_fss/roadtype_rel))
			{
				attribute<bool>  Connectable    := roadtype_rel != Classifications/OSM/roadtype/V/motorway && roadtype_rel != Classifications/OSM/roadtype/V/motorway_link;
				attribute<km_hr> KPH            := MakeDefined(KPH_from_source, Classifications/OSM/roadtype/CarSpeedOutside[roadtype_rel]);
			}
		}
	}
}
